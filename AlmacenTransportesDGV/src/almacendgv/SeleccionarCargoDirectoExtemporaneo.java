/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package almacendgv;

import beans.FacturaDTO;
import javax.swing.JOptionPane;
import logger.ErrorLogger;

/**
 *
 * @author David Israel
 */
public class SeleccionarCargoDirectoExtemporaneo extends javax.swing.JFrame {

    private FacturaDTO factura;
    private ControlFacturasProveedor controlFacturas;
    
    /**
     * Creates new form SeleccionarCargoDirecto
     */
    public SeleccionarCargoDirectoExtemporaneo() {
        try{
            initComponents();
            this.setLocationRelativeTo(null);
            //verificar que el usuario tenga los privilegios para ejecutar la acción
            if(UserHome.getUsuario().getPrivilegio() != 1){
                JOptionPane.showMessageDialog(null, "El usuario activo no posee los privilegios\n"
                        + "necesarios para ejecutar la acción.", "Privilegios insuficientes", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1345\n" + ex.getMessage(),
                    "Error al iniciar ventana Cargo Directo!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("Constructor SeleccionarCargoDirectoExtemporaneo()", 1345, UserHome.getUsuario(), ex);
            this.dispose();
        }
    }

    public FacturaDTO getFactura(){
        return this.factura;
    }
    
    public void setFactura(FacturaDTO factura){
        this.factura = factura;
    }
    
    public ControlFacturasProveedor getControlFacturas(){
        return this.controlFacturas;
    }
    
    public void setControlFacturas(ControlFacturasProveedor controlFacturas){
        this.controlFacturas = controlFacturas;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLTipoCargoDirecto = new javax.swing.JLabel();
        jCBTipoCargoDirecto = new javax.swing.JComboBox();
        jBCancelar = new javax.swing.JButton();
        jBAceptar = new javax.swing.JButton();
        jMBMenu = new javax.swing.JMenuBar();
        jMOpciones = new javax.swing.JMenu();
        jMIAceptar = new javax.swing.JMenuItem();
        jMICancelar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMIVerManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccionar Tipo de Cargo (Extemporáneo) - Sistema de Administración Mantenimiento");
        setResizable(false);

        jLTipoCargoDirecto.setText("Tipo de Cargo Directo:");

        jCBTipoCargoDirecto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cargo a Unidad de Transporte", "Cargo a Operador", "Cargo Especial", "Cargo Taller" }));
        jCBTipoCargoDirecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBTipoCargoDirectoActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBAceptar.setText("Aceptar");
        jBAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceptarActionPerformed(evt);
            }
        });

        jMOpciones.setText("Opciones");

        jMIAceptar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMIAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Apply-16.png"))); // NOI18N
        jMIAceptar.setText("Aceptar");
        jMIAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAceptarActionPerformed(evt);
            }
        });
        jMOpciones.add(jMIAceptar);

        jMICancelar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMICancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Exit-16.png"))); // NOI18N
        jMICancelar.setText("Cancelar");
        jMICancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICancelarActionPerformed(evt);
            }
        });
        jMOpciones.add(jMICancelar);

        jMBMenu.add(jMOpciones);

        jMenu3.setText("Ayuda");

        jMIVerManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMIVerManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Help-16.png"))); // NOI18N
        jMIVerManual.setText("Ver Manual");
        jMIVerManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIVerManualActionPerformed(evt);
            }
        });
        jMenu3.add(jMIVerManual);

        jMBMenu.add(jMenu3);

        setJMenuBar(jMBMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLTipoCargoDirecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCBTipoCargoDirecto, 0, 221, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBCancelar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAceptar, jBCancelar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTipoCargoDirecto)
                    .addComponent(jCBTipoCargoDirecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBAceptar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMIAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAceptarActionPerformed
        this.aceptar();
    }//GEN-LAST:event_jMIAceptarActionPerformed

    private void jMICancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMICancelarActionPerformed

    private void jMIVerManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIVerManualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMIVerManualActionPerformed

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed
        this.aceptar();
    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jCBTipoCargoDirectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBTipoCargoDirectoActionPerformed
        this.aceptar();
    }//GEN-LAST:event_jCBTipoCargoDirectoActionPerformed

    private void aceptar(){
        try{
            //verificar que el usuario tenga los privilegios para ejecutar la acción
            if(UserHome.getUsuario().getPrivilegio() != 1){
                JOptionPane.showMessageDialog(null, "El usuario activo no posee los privilegios\n"
                        + "necesarios para ejecutar la acción.", "Privilegios insuficientes", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(this.jCBTipoCargoDirecto.getSelectedIndex() == 0){
                CargoUnidadExtemporaneo cargoUnidad = new CargoUnidadExtemporaneo();
                cargoUnidad.setFactura(factura);
                cargoUnidad.setControlFacturas(controlFacturas);
                cargoUnidad.mostrarInformacion();
                cargoUnidad.setVisible(true);
            } else if(this.jCBTipoCargoDirecto.getSelectedIndex() == 1) {
                CargoOperadorExtemporaneo cargoOperador = new CargoOperadorExtemporaneo();
                cargoOperador.setFactura(factura);
                cargoOperador.setControlFacturasProveedor(controlFacturas);
                cargoOperador.mostrarInformacion();
                cargoOperador.setVisible(true);
            } else if(this.jCBTipoCargoDirecto.getSelectedIndex() == 2) {
                CargoEspecialExtemporaneo cargoEspecial = new CargoEspecialExtemporaneo();
                cargoEspecial.setFactura(factura);
                cargoEspecial.setControlFacturas(controlFacturas);
                cargoEspecial.mostrarInformacion();
                cargoEspecial.setVisible(true);
            }
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1346\n" + ex.getMessage(),
                    "Error al abrir el cargo!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("SeleccionarCargoDirectoExtemporaneo aceptar()", 1346, UserHome.getUsuario(), ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCargoDirectoExtemporaneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCargoDirectoExtemporaneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCargoDirectoExtemporaneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeleccionarCargoDirectoExtemporaneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeleccionarCargoDirectoExtemporaneo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JComboBox jCBTipoCargoDirecto;
    private javax.swing.JLabel jLTipoCargoDirecto;
    private javax.swing.JMenuBar jMBMenu;
    private javax.swing.JMenuItem jMIAceptar;
    private javax.swing.JMenuItem jMICancelar;
    private javax.swing.JMenuItem jMIVerManual;
    private javax.swing.JMenu jMOpciones;
    private javax.swing.JMenu jMenu3;
    // End of variables declaration//GEN-END:variables
}
