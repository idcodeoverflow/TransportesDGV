/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package almacendgv;

import beans.FacturaDTO;
import beans.RefaccionDTO;
import beans.UsuarioDTO;
import bussines.DriverExitReport;
import bussines.EntriesReport;
import bussines.InventaryReport;
import bussines.LazyQueryBO;
import bussines.SpecialExitReport;
import bussines.TallerExitReport;
import bussines.TransportExitReport;
import data.FacturaDAO;
import data.LazyQueryDAO;
import data.RefaccionDAO;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logger.ErrorLogger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import support.DBConnection;

/**
 *
 * @author David Israel
 */
public class UserHome extends javax.swing.JFrame {

    private static UsuarioDTO usuario;

    public static UsuarioDTO getUsuario() {
        return usuario;
    }

    public static void setUsuario(UsuarioDTO aUsuario) {
        usuario = aUsuario;
    }
    
    /**
     * Creates new form UserHome
     */
    public UserHome() {
        try{
            initComponents();
            this.setLocationRelativeTo(null);
            this.setTitle(this.getTitle() + " - Bienvenido " + UserHome.getUsuario().getNombre()
                    + " " + UserHome.getUsuario().getApellidos());
            this.obtenerPartesBajasEnInventario();
            this.obtenerFacturasProveedorVencidas();
            this.jTNotificaciones.setSelectionMode(0);
            this.jTPartesBajas.setSelectionMode(0);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1155\n" + ex.getMessage(),
                    "Error al iniciar ventana HomeUser!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("Constructor UserHome()", 1155, UserHome.getUsuario(), ex);
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPModulosPrincipales = new javax.swing.JPanel();
        jBRefacciones = new javax.swing.JButton();
        jBInventario = new javax.swing.JButton();
        jBReparaciones = new javax.swing.JButton();
        jBUnidades = new javax.swing.JButton();
        jBFacturasProveedor = new javax.swing.JButton();
        jBSAlmacen = new javax.swing.JButton();
        jPPartesBajasInventario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPartesBajas = new javax.swing.JTable();
        jLLogo = new javax.swing.JLabel();
        jPNotificacionesPendientes = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTNotificaciones = new javax.swing.JTable();
        jMBMenu = new javax.swing.JMenuBar();
        jMIAcciones = new javax.swing.JMenu();
        jMIActualizarPartesBajasStock = new javax.swing.JMenuItem();
        jMICerrarSesion = new javax.swing.JMenuItem();
        jMISalir = new javax.swing.JMenuItem();
        jMReportes = new javax.swing.JMenu();
        jMICatalogoProveedores = new javax.swing.JMenuItem();
        jMRefacciones = new javax.swing.JMenu();
        jMICatalogoRefacciones = new javax.swing.JMenuItem();
        jMICatalogoOperadores = new javax.swing.JMenuItem();
        jMICatalogoOperadoresCBajas = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMIReporteCargosDirectos = new javax.swing.JMenuItem();
        jMIReporteEntradas = new javax.swing.JMenuItem();
        jMIReporteInventario = new javax.swing.JMenuItem();
        jMIReporteInventarioBajoStock = new javax.swing.JMenuItem();
        jMIReporteSalidasEspeciales = new javax.swing.JMenuItem();
        jMIReporteSalidasUnidad = new javax.swing.JMenuItem();
        jMIReporteSalidasOperador = new javax.swing.JMenuItem();
        jMIReporteSalidasTaller = new javax.swing.JMenuItem();
        jMIReporteTrabajosExternos = new javax.swing.JMenuItem();
        jMIReporteOrdenReparacion = new javax.swing.JMenuItem();
        jMIReporteCostoReparaciones = new javax.swing.JMenuItem();
        jMIReporteReparacionesPUnidad = new javax.swing.JMenuItem();
        jMICatalogoTransportes = new javax.swing.JMenuItem();
        jMICatalogoTransportesCBajas = new javax.swing.JMenuItem();
        jMModulos = new javax.swing.JMenu();
        jMIInvetarios = new javax.swing.JMenuItem();
        jMManejoRefacciones = new javax.swing.JMenu();
        jMIRefacciones = new javax.swing.JMenuItem();
        jMIFamiliasRefacciones = new javax.swing.JMenuItem();
        jMIGruposRefacciones = new javax.swing.JMenuItem();
        jMIMarcasMotores = new javax.swing.JMenuItem();
        jMIOperadores = new javax.swing.JMenuItem();
        jMIProveedores = new javax.swing.JMenuItem();
        jMIRegistroFacturas = new javax.swing.JMenuItem();
        jMIReparaciones = new javax.swing.JMenuItem();
        jMISalidasAlmacen = new javax.swing.JMenuItem();
        jMIUsuarios = new javax.swing.JMenuItem();
        jMIUnidadesTransporte = new javax.swing.JMenuItem();
        jMAyuda = new javax.swing.JMenu();
        jMIVerManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inicio Inventario Taller Sistema de Administración Mantenimiento");

        jPModulosPrincipales.setBorder(javax.swing.BorderFactory.createTitledBorder("Módulos Principales"));

        jBRefacciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Tools-32.png"))); // NOI18N
        jBRefacciones.setText("Refacciones");
        jBRefacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRefaccionesActionPerformed(evt);
            }
        });

        jBInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Red-Boxes-32.png"))); // NOI18N
        jBInventario.setText("Inventario");
        jBInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInventarioActionPerformed(evt);
            }
        });

        jBReparaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Repair-32.png"))); // NOI18N
        jBReparaciones.setText("Reparaciones");
        jBReparaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBReparacionesActionPerformed(evt);
            }
        });

        jBUnidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Truck-UnitControl.png"))); // NOI18N
        jBUnidades.setText("Unidades");
        jBUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUnidadesActionPerformed(evt);
            }
        });

        jBFacturasProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/EntryRegister-32.png"))); // NOI18N
        jBFacturasProveedor.setText("Facturas Prov.");
        jBFacturasProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFacturasProveedorActionPerformed(evt);
            }
        });

        jBSAlmacen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ExitRegistry-32.png"))); // NOI18N
        jBSAlmacen.setText("S. Almacén");
        jBSAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSAlmacenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPModulosPrincipalesLayout = new javax.swing.GroupLayout(jPModulosPrincipales);
        jPModulosPrincipales.setLayout(jPModulosPrincipalesLayout);
        jPModulosPrincipalesLayout.setHorizontalGroup(
            jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPModulosPrincipalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBRefacciones, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBFacturasProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBSAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBReparaciones, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPModulosPrincipalesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBRefacciones, jBReparaciones, jBSAlmacen});

        jPModulosPrincipalesLayout.setVerticalGroup(
            jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPModulosPrincipalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRefacciones, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBReparaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPModulosPrincipalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBFacturasProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPPartesBajasInventario.setBorder(javax.swing.BorderFactory.createTitledBorder("Partes Bajas en Stock"));

        jTPartesBajas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave Refacción", "Nombre", "Mínimo", "Punto Reorden", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTPartesBajas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTPartesBajas);
        if (jTPartesBajas.getColumnModel().getColumnCount() > 0) {
            jTPartesBajas.getColumnModel().getColumn(0).setMinWidth(100);
            jTPartesBajas.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTPartesBajas.getColumnModel().getColumn(0).setMaxWidth(100);
            jTPartesBajas.getColumnModel().getColumn(2).setMinWidth(90);
            jTPartesBajas.getColumnModel().getColumn(2).setPreferredWidth(90);
            jTPartesBajas.getColumnModel().getColumn(2).setMaxWidth(90);
            jTPartesBajas.getColumnModel().getColumn(3).setMinWidth(95);
            jTPartesBajas.getColumnModel().getColumn(3).setPreferredWidth(95);
            jTPartesBajas.getColumnModel().getColumn(3).setMaxWidth(95);
            jTPartesBajas.getColumnModel().getColumn(4).setMinWidth(90);
            jTPartesBajas.getColumnModel().getColumn(4).setPreferredWidth(90);
            jTPartesBajas.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        javax.swing.GroupLayout jPPartesBajasInventarioLayout = new javax.swing.GroupLayout(jPPartesBajasInventario);
        jPPartesBajasInventario.setLayout(jPPartesBajasInventarioLayout);
        jPPartesBajasInventarioLayout.setHorizontalGroup(
            jPPartesBajasInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPartesBajasInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPPartesBajasInventarioLayout.setVerticalGroup(
            jPPartesBajasInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPartesBajasInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Logo Efectivo Negro mediano.png"))); // NOI18N

        jPNotificacionesPendientes.setBorder(javax.swing.BorderFactory.createTitledBorder("Notificaciones Pendientes"));

        jTNotificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Folio", "Proveedor", "Fecha", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTNotificaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTNotificaciones);
        if (jTNotificaciones.getColumnModel().getColumnCount() > 0) {
            jTNotificaciones.getColumnModel().getColumn(0).setMinWidth(60);
            jTNotificaciones.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTNotificaciones.getColumnModel().getColumn(0).setMaxWidth(60);
            jTNotificaciones.getColumnModel().getColumn(3).setMinWidth(80);
            jTNotificaciones.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTNotificaciones.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPNotificacionesPendientesLayout = new javax.swing.GroupLayout(jPNotificacionesPendientes);
        jPNotificacionesPendientes.setLayout(jPNotificacionesPendientesLayout);
        jPNotificacionesPendientesLayout.setHorizontalGroup(
            jPNotificacionesPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPNotificacionesPendientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPNotificacionesPendientesLayout.setVerticalGroup(
            jPNotificacionesPendientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPNotificacionesPendientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMIAcciones.setText("Acciones");

        jMIActualizarPartesBajasStock.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMIActualizarPartesBajasStock.setText("Actualizar Notificaciones");
        jMIActualizarPartesBajasStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIActualizarPartesBajasStockActionPerformed(evt);
            }
        });
        jMIAcciones.add(jMIActualizarPartesBajasStock);

        jMICerrarSesion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMICerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/3D-Key-16.png"))); // NOI18N
        jMICerrarSesion.setText("Cerrar Sesión");
        jMICerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICerrarSesionActionPerformed(evt);
            }
        });
        jMIAcciones.add(jMICerrarSesion);

        jMISalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMISalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Exit-16.png"))); // NOI18N
        jMISalir.setText("Salir");
        jMISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalirActionPerformed(evt);
            }
        });
        jMIAcciones.add(jMISalir);

        jMBMenu.add(jMIAcciones);

        jMReportes.setText("Reportes");

        jMICatalogoProveedores.setText("Catálogo de Proveedores");
        jMICatalogoProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoProveedoresActionPerformed(evt);
            }
        });
        jMReportes.add(jMICatalogoProveedores);

        jMRefacciones.setText("Refacciones");

        jMICatalogoRefacciones.setText("Catálogo de Refacciones");
        jMICatalogoRefacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoRefaccionesActionPerformed(evt);
            }
        });
        jMRefacciones.add(jMICatalogoRefacciones);

        jMReportes.add(jMRefacciones);

        jMICatalogoOperadores.setText("Catálogo de Operadores");
        jMICatalogoOperadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoOperadoresActionPerformed(evt);
            }
        });
        jMReportes.add(jMICatalogoOperadores);

        jMICatalogoOperadoresCBajas.setText("Catálogo de Operadores c/Bajas");
        jMICatalogoOperadoresCBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoOperadoresCBajasActionPerformed(evt);
            }
        });
        jMReportes.add(jMICatalogoOperadoresCBajas);

        jMenu1.setText("Inventarios");

        jMIReporteCargosDirectos.setText("Reporte de Cargos Directos");
        jMIReporteCargosDirectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteCargosDirectosActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteCargosDirectos);

        jMIReporteEntradas.setText("Reporte de Entradas");
        jMIReporteEntradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteEntradasActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteEntradas);

        jMIReporteInventario.setText("Reporte Inventario");
        jMIReporteInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteInventarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteInventario);

        jMIReporteInventarioBajoStock.setText("Reporte Inventrario Bajo en Stock");
        jMIReporteInventarioBajoStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteInventarioBajoStockActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteInventarioBajoStock);

        jMIReporteSalidasEspeciales.setText("Reporte de Salidas Especiales");
        jMIReporteSalidasEspeciales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteSalidasEspecialesActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteSalidasEspeciales);

        jMIReporteSalidasUnidad.setText("Reporte de Salidas a Unidad");
        jMIReporteSalidasUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteSalidasUnidadActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteSalidasUnidad);

        jMIReporteSalidasOperador.setText("Reporte de Salidas a Operador");
        jMIReporteSalidasOperador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteSalidasOperadorActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteSalidasOperador);

        jMIReporteSalidasTaller.setText("Reporte de Salidas a Taller");
        jMIReporteSalidasTaller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteSalidasTallerActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteSalidasTaller);

        jMIReporteTrabajosExternos.setText("Reporte Trabajos Externos");
        jMIReporteTrabajosExternos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteTrabajosExternosActionPerformed(evt);
            }
        });
        jMenu1.add(jMIReporteTrabajosExternos);

        jMReportes.add(jMenu1);

        jMIReporteOrdenReparacion.setText("Reporte Orden de Reparación");
        jMIReporteOrdenReparacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteOrdenReparacionActionPerformed(evt);
            }
        });
        jMReportes.add(jMIReporteOrdenReparacion);

        jMIReporteCostoReparaciones.setText("Reporte Costo Reparaciones");
        jMIReporteCostoReparaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteCostoReparacionesActionPerformed(evt);
            }
        });
        jMReportes.add(jMIReporteCostoReparaciones);

        jMIReporteReparacionesPUnidad.setText("Reporte Reparaciones P/Unidad");
        jMIReporteReparacionesPUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReporteReparacionesPUnidadActionPerformed(evt);
            }
        });
        jMReportes.add(jMIReporteReparacionesPUnidad);

        jMICatalogoTransportes.setText("Catálogo de Transportes");
        jMICatalogoTransportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoTransportesActionPerformed(evt);
            }
        });
        jMReportes.add(jMICatalogoTransportes);

        jMICatalogoTransportesCBajas.setText("Catálogo de Transportes c/Bajas");
        jMICatalogoTransportesCBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICatalogoTransportesCBajasActionPerformed(evt);
            }
        });
        jMReportes.add(jMICatalogoTransportesCBajas);

        jMBMenu.add(jMReportes);

        jMModulos.setText("Modulos");

        jMIInvetarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMIInvetarios.setText("Inventarios");
        jMIInvetarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIInvetariosActionPerformed(evt);
            }
        });
        jMModulos.add(jMIInvetarios);

        jMManejoRefacciones.setText("Manejo Refacciones");

        jMIRefacciones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_J, java.awt.event.InputEvent.CTRL_MASK));
        jMIRefacciones.setText("Refacciones");
        jMIRefacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRefaccionesActionPerformed(evt);
            }
        });
        jMManejoRefacciones.add(jMIRefacciones);

        jMIFamiliasRefacciones.setText("Familias de Refacciones");
        jMIFamiliasRefacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIFamiliasRefaccionesActionPerformed(evt);
            }
        });
        jMManejoRefacciones.add(jMIFamiliasRefacciones);

        jMIGruposRefacciones.setText("Grupos de Refacciones");
        jMIGruposRefacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIGruposRefaccionesActionPerformed(evt);
            }
        });
        jMManejoRefacciones.add(jMIGruposRefacciones);

        jMModulos.add(jMManejoRefacciones);

        jMIMarcasMotores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMIMarcasMotores.setText("Marcas Motores");
        jMIMarcasMotores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIMarcasMotoresActionPerformed(evt);
            }
        });
        jMModulos.add(jMIMarcasMotores);

        jMIOperadores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMIOperadores.setText("Operadores");
        jMIOperadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIOperadoresActionPerformed(evt);
            }
        });
        jMModulos.add(jMIOperadores);

        jMIProveedores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMIProveedores.setText("Proveedores");
        jMIProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIProveedoresActionPerformed(evt);
            }
        });
        jMModulos.add(jMIProveedores);

        jMIRegistroFacturas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        jMIRegistroFacturas.setText("Registro de Facturas");
        jMIRegistroFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRegistroFacturasActionPerformed(evt);
            }
        });
        jMModulos.add(jMIRegistroFacturas);

        jMIReparaciones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMIReparaciones.setText("Reparaciones");
        jMIReparaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIReparacionesActionPerformed(evt);
            }
        });
        jMModulos.add(jMIReparaciones);

        jMISalidasAlmacen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMISalidasAlmacen.setText("Salidas de Almacén");
        jMISalidasAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalidasAlmacenActionPerformed(evt);
            }
        });
        jMModulos.add(jMISalidasAlmacen);

        jMIUsuarios.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMIUsuarios.setText("Usuarios");
        jMIUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIUsuariosActionPerformed(evt);
            }
        });
        jMModulos.add(jMIUsuarios);

        jMIUnidadesTransporte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMIUnidadesTransporte.setText("Unidades Transporte");
        jMIUnidadesTransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIUnidadesTransporteActionPerformed(evt);
            }
        });
        jMModulos.add(jMIUnidadesTransporte);

        jMBMenu.add(jMModulos);

        jMAyuda.setText("Ayuda");

        jMIVerManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMIVerManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Help-16.png"))); // NOI18N
        jMIVerManual.setText("Ver Manual");
        jMAyuda.add(jMIVerManual);

        jMBMenu.add(jMAyuda);

        setJMenuBar(jMBMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPModulosPrincipales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPNotificacionesPendientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLLogo)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPPartesBajasInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPModulosPrincipales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPPartesBajasInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPNotificacionesPendientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMICerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICerrarSesionActionPerformed
        this.cerrarSesion();
    }//GEN-LAST:event_jMICerrarSesionActionPerformed

    private void jBRefaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRefaccionesActionPerformed
        this.refacciones();
    }//GEN-LAST:event_jBRefaccionesActionPerformed

    private void jBInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInventarioActionPerformed
        this.inventarios();
    }//GEN-LAST:event_jBInventarioActionPerformed

    private void jBReparacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBReparacionesActionPerformed
        this.reparaciones();
    }//GEN-LAST:event_jBReparacionesActionPerformed

    private void jBUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUnidadesActionPerformed
        this.unidades();
    }//GEN-LAST:event_jBUnidadesActionPerformed

    private void jBFacturasProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFacturasProveedorActionPerformed
        this.facturas();
    }//GEN-LAST:event_jBFacturasProveedorActionPerformed

    private void jBSAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSAlmacenActionPerformed
        this.salidas();
    }//GEN-LAST:event_jBSAlmacenActionPerformed

    private void jMIUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIUsuariosActionPerformed
        this.usuarios();
    }//GEN-LAST:event_jMIUsuariosActionPerformed

    private void jMIRefaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRefaccionesActionPerformed
        this.refacciones();
    }//GEN-LAST:event_jMIRefaccionesActionPerformed

    private void jMIUnidadesTransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIUnidadesTransporteActionPerformed
        this.unidades();
    }//GEN-LAST:event_jMIUnidadesTransporteActionPerformed

    private void jMIProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIProveedoresActionPerformed
        this.proveedores();
    }//GEN-LAST:event_jMIProveedoresActionPerformed

    private void jMIFamiliasRefaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIFamiliasRefaccionesActionPerformed
        this.familias();
    }//GEN-LAST:event_jMIFamiliasRefaccionesActionPerformed

    private void jMIGruposRefaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIGruposRefaccionesActionPerformed
        this.grupos();
    }//GEN-LAST:event_jMIGruposRefaccionesActionPerformed

    private void jMIRegistroFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRegistroFacturasActionPerformed
        this.facturas();
    }//GEN-LAST:event_jMIRegistroFacturasActionPerformed

    private void jMIOperadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIOperadoresActionPerformed
        this.operadores();
    }//GEN-LAST:event_jMIOperadoresActionPerformed

    private void jMIReparacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReparacionesActionPerformed
        this.reparaciones();
    }//GEN-LAST:event_jMIReparacionesActionPerformed

    private void jMISalidasAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalidasAlmacenActionPerformed
        this.salidas();
    }//GEN-LAST:event_jMISalidasAlmacenActionPerformed

    private void jMIInvetariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIInvetariosActionPerformed
        this.inventarios();
    }//GEN-LAST:event_jMIInvetariosActionPerformed

    private void jMIActualizarPartesBajasStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIActualizarPartesBajasStockActionPerformed
        this.obtenerPartesBajasEnInventario();
        this.obtenerFacturasProveedorVencidas();
    }//GEN-LAST:event_jMIActualizarPartesBajasStockActionPerformed

    private void jMISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMISalirActionPerformed

    private void jMICatalogoProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoProveedoresActionPerformed
        this.generarCatalogoProveedores();
    }//GEN-LAST:event_jMICatalogoProveedoresActionPerformed

    private void jMICatalogoRefaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoRefaccionesActionPerformed
        this.generarCatalogoRefacciones();
    }//GEN-LAST:event_jMICatalogoRefaccionesActionPerformed

    private void jMIReporteInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteInventarioActionPerformed
        this.generarReporteInventario();
    }//GEN-LAST:event_jMIReporteInventarioActionPerformed

    private void jMIReporteInventarioBajoStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteInventarioBajoStockActionPerformed
        this.generarReporteInventarioBajoStock();
    }//GEN-LAST:event_jMIReporteInventarioBajoStockActionPerformed

    private void jMICatalogoOperadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoOperadoresActionPerformed
        this.generarCatalogoOperadores();
    }//GEN-LAST:event_jMICatalogoOperadoresActionPerformed

    private void jMICatalogoOperadoresCBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoOperadoresCBajasActionPerformed
        this.generarCatalogoOperadoresCBajas();
    }//GEN-LAST:event_jMICatalogoOperadoresCBajasActionPerformed

    private void jMIReporteOrdenReparacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteOrdenReparacionActionPerformed
        this.generarReporteOrdenReparacion();
    }//GEN-LAST:event_jMIReporteOrdenReparacionActionPerformed

    private void jMICatalogoTransportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoTransportesActionPerformed
        this.generarCatalogoUnidadesTransporte();
    }//GEN-LAST:event_jMICatalogoTransportesActionPerformed

    private void jMICatalogoTransportesCBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICatalogoTransportesCBajasActionPerformed
        this.generarCatalogoUnidadesTransporteCBajas();
    }//GEN-LAST:event_jMICatalogoTransportesCBajasActionPerformed

    private void jMIReporteReparacionesPUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteReparacionesPUnidadActionPerformed
        ReporteReparacionesPUnidad reparacionesUnidad = new ReporteReparacionesPUnidad();
        reparacionesUnidad.setLocationRelativeTo(null);
        reparacionesUnidad.setVisible(true);
    }//GEN-LAST:event_jMIReporteReparacionesPUnidadActionPerformed

    private void jMIReporteCostoReparacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteCostoReparacionesActionPerformed
        ReporteCostoReparaciones costoReparaciones = new ReporteCostoReparaciones();
        costoReparaciones.setLocationRelativeTo(null);
        costoReparaciones.setVisible(true);
    }//GEN-LAST:event_jMIReporteCostoReparacionesActionPerformed

    private void jMIMarcasMotoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIMarcasMotoresActionPerformed
        this.marcasMotores();
    }//GEN-LAST:event_jMIMarcasMotoresActionPerformed

    private void jMIReporteEntradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteEntradasActionPerformed
        this.generarReporteEntradas();
    }//GEN-LAST:event_jMIReporteEntradasActionPerformed

    private void jMIReporteSalidasUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteSalidasUnidadActionPerformed
        this.generarReporteSalidaTransporte();
    }//GEN-LAST:event_jMIReporteSalidasUnidadActionPerformed

    private void jMIReporteCargosDirectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteCargosDirectosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMIReporteCargosDirectosActionPerformed

    private void jMIReporteTrabajosExternosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteTrabajosExternosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMIReporteTrabajosExternosActionPerformed

    private void jMIReporteSalidasEspecialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteSalidasEspecialesActionPerformed
        this.generarReporteSalidaEspecial();
    }//GEN-LAST:event_jMIReporteSalidasEspecialesActionPerformed

    private void jMIReporteSalidasOperadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteSalidasOperadorActionPerformed
        this.generarReporteSalidasOperador();
    }//GEN-LAST:event_jMIReporteSalidasOperadorActionPerformed

    private void jMIReporteSalidasTallerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIReporteSalidasTallerActionPerformed
        this.generarReporteSalidasTaller();
    }//GEN-LAST:event_jMIReporteSalidasTallerActionPerformed

    private void usuarios(){
        try{
            ControlUsuarios users = new ControlUsuarios();
            users.setLocationRelativeTo(null);
            users.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1157\n" + ex.getMessage(),
                    "Error al abrir Usuarios!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome usuarios()", 1157, UserHome.getUsuario(), ex);
        }
    }
    
    private void inventarios(){
        try{
            ControlInventarios inventarios = new ControlInventarios();
            inventarios.setLocationRelativeTo(null);
            inventarios.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1158\n" + ex.getMessage(),
                    "Error al abrir Inventarios!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome inventarios()", 1158, UserHome.getUsuario(), ex);
        }
    }
    
    private void marcasMotores(){
        try{
            ControlMarcasMotores controlMarcasMotores = new ControlMarcasMotores();
            controlMarcasMotores.setLocationRelativeTo(null);
            controlMarcasMotores.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2028\n" + ex.getMessage(),
                    "Error al abrir Inventarios!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome marcasMotores()", 2028, UserHome.getUsuario(), ex);
        }
    }
    
    private void reparaciones(){
        try{
            ControlOrdenesReparacion ordenesReparacion = new ControlOrdenesReparacion();
            ordenesReparacion.mostrarValores();
            ordenesReparacion.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1159\n" + ex.getMessage(),
                    "Error al abrir Reparaciones!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome reparaciones()", 1159, UserHome.getUsuario(), ex);
        }
    }
    
    private void unidades(){
        try{
            ControlUnidades unidades = new ControlUnidades();
            unidades.setLocationRelativeTo(null);
            unidades.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1160\n" + ex.getMessage(),
                    "Error al abrir Unidades de Transporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome unidades()", 1160, UserHome.getUsuario(), ex);
        }
    }
    
    private void proveedores(){
        try{
            ControlProveedores suppliers = new ControlProveedores();
            suppliers.setLocationRelativeTo(null);
            suppliers.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1161\n" + ex.getMessage(),
                    "Error al abrir Proveedores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome proveedores()", 1161, UserHome.getUsuario(), ex);
        }
    }
    
    private void refacciones(){
        try{
            ControlPartes parts = new ControlPartes();
            parts.setLocationRelativeTo(null);
            parts.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1162\n" + ex.getMessage(),
                    "Error al abrir Refacciones!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome refacciones()", 1162, UserHome.getUsuario(), ex);
        }
    }
    
    private void familias(){
        try{
            ControlFamiliaRefacciones cat = new ControlFamiliaRefacciones();
            cat.setLocationRelativeTo(null);
            cat.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1164\n" + ex.getMessage(),
                    "Error al abrir Familias de Refacciones!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome familias()", 1164, UserHome.getUsuario(), ex);
        }
    }
    
    private void grupos(){
        try{
            ControlGrupoRefacciones cgf = new ControlGrupoRefacciones();
            cgf.setLocationRelativeTo(null);
            cgf.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1165\n" + ex.getMessage(),
                    "Error al abrir Grupos de Refacciones!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome grupos()", 1165, UserHome.getUsuario(), ex);
        }
    }
    
    private void facturas(){
        try{
            ControlFacturasProveedor facturas = new ControlFacturasProveedor();
            facturas.setLocationRelativeTo(null);
            facturas.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1166\n" + ex.getMessage(),
                    "Error al abrir Facturas de Proveedores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome facturas()", 1166, UserHome.getUsuario(), ex);
        }
    }
    
    private void operadores(){
        try{
            ControlOperadores operadores = new ControlOperadores();
            operadores.setLocationRelativeTo(null);
            operadores.setVisible(true);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1167\n" + ex.getMessage(),
                    "Error al abrir Operadores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome operadores()", 1167, UserHome.getUsuario(), ex);
        }
    }
    
    private void salidas(){
        try{
            ControlSalidasAlmacen salidaAlmacen = new ControlSalidasAlmacen();
            salidaAlmacen.setLocationRelativeTo(null);
            salidaAlmacen.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1168\n" + ex.getMessage(),
                    "Error al abrir Salidas de Almacén!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome salidas()", 1168, UserHome.getUsuario(), ex);
        }
    }
    
    private void obtenerPartesBajasEnInventario(){
        String mensajeError = "";
        try {
            DefaultTableModel modelo = (DefaultTableModel) this.jTPartesBajas.getModel();
            List<RefaccionDTO> refacciones = null;
            RefaccionDAO accesoRefaccion = new RefaccionDAO();
            LazyQueryBO lazyQ = new LazyQueryBO();
            double existencia = 0.00;
            this.limpiarTablaBajoInventario();
            refacciones = accesoRefaccion.obtenerRefacciones();
            lazyQ.startLazyQuery();
            for(RefaccionDTO refaccion : refacciones){
                if(refaccion.isNotificacion()){
                    existencia = accesoRefaccion.obtenerExistenciaRefaccion(refaccion.getClaveRefaccion(), false, false);
                    mensajeError = refaccion.toString() + "_existencia:_" + existencia;
                    if(existencia <= refaccion.getPuntoReorden()){
                        Object datos[] = {refaccion.getClaveRefaccion(), refaccion.getNombre(), 
                            refaccion.getMinimo(), refaccion.getPuntoReorden(), existencia, ""};
                        modelo.addRow(datos);
                    }
                }
            }
            lazyQ.endLazyQuery();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1169\n" + ex.getMessage(),
                    "Error al obtener refacciones\nlas bajas en inventario de la BD!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome usuarios()", 1169, UserHome.getUsuario(), ex);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1170\n" + ex.getMessage(),
                    "Error al obtener refacciones\nlas bajas en inventario!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome obtenerPartesBajasEnInventario()", 1170, UserHome.getUsuario(), ex);
        }
    }
    
    private void obtenerFacturasProveedorVencidas(){
        String mensajeError = "";
        try {
            DefaultTableModel modelo = (DefaultTableModel) this.jTNotificaciones.getModel();
            List<FacturaDTO> facturas = null;
            FacturaDAO accesoFactura = new FacturaDAO();
            LazyQueryBO lazyQ = new LazyQueryBO();
            this.limpiarTablaFacturasVencidas();
            facturas = accesoFactura.obtenerFacturasVencidas(true);
            lazyQ.startLazyQuery();
            for(FacturaDTO factura : facturas){
                mensajeError = factura.toString();
                
                Object datos[] = {factura.getFolio(), factura.getProveedor().getNombre(), 
                        factura.getFechaRegistro(), factura.getTotal()};
                    modelo.addRow(datos);
            }
            lazyQ.endLazyQuery();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1356\n" + ex.getMessage(),
                    "Error al obtener refacciones\nlas bajas en inventario de la BD!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome obtenerFacturasProveedorVencidas()" + mensajeError, 1356, UserHome.getUsuario(), ex);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1357\n" + ex.getMessage(),
                    "Error al obtener refacciones\nlas bajas en inventario!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome obtenerFacturasProveedorVencidas()" + mensajeError, 1357, UserHome.getUsuario(), ex);
        }
    }
    
    private void limpiarTablaBajoInventario(){
        try{
            DefaultTableModel modelo = (DefaultTableModel) this.jTPartesBajas.getModel();
            while(modelo.getRowCount() > 0){
                modelo.removeRow(modelo.getRowCount() - 1);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1171\n" + ex.getMessage(),
                    "Error al limpiar la tabla de\nNotificaciones de Inventarios!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome limpiarTablaBajoInventario()", 1171, UserHome.getUsuario(), ex);
        }
    }
    
    private void limpiarTablaFacturasVencidas(){
        try{
            DefaultTableModel modelo = (DefaultTableModel) this.jTNotificaciones.getModel();
            while(modelo.getRowCount() > 0){
                modelo.removeRow(modelo.getRowCount() - 1);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1376\n" + ex.getMessage(),
                    "Error al limpiar la tabla de\nNotificaciones de Inventarios!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome limpiarTablaBajoInventario()", 1376, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarCatalogoProveedores(){
        try {
            String reportPath = "/reports/CatalogoProveedoresAlmacenTaller.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1121\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoProveedores()", 1121, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1222\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoProveedores()", 1222, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1223\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoProveedores()", 1223, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarCatalogoRefacciones(){
        try {
            String reportPath = "/reports/CatalogoRefaccionesRemex.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1128\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoRefacciones()", 1128, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1229\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoRefacciones()", 1229, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1230\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoRefacciones()", 1230, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteInventarioBajoStock(){
        try {
            InventaryReport report = new InventaryReport(this);
            report.setSoloBajoStock(true);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1233\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteBajoStock()", 1233, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteInventario(){
        try {
            InventaryReport report = new InventaryReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1236\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 1236, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarCatalogoOperadores(){
        try {
            String reportPath = "/reports/ReporteOperadoresRemex.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1237\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadores()", 1237, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1238\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadores()", 1238, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1239\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadores()", 1239, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarCatalogoOperadoresCBajas(){
        try {
            String reportPath = "/reports/ReporteOperadoresRemexCBajas.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1240\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadoresCBajas()", 1240, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1241\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadoresCBajas()", 1241, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1242\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoOperadoresCBajas()", 1242, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteOrdenReparacion(){
        ReporteOrdenReparacion rOrdenReparacion = new ReporteOrdenReparacion();
        rOrdenReparacion.setLocationRelativeTo(null);
        rOrdenReparacion.setVisible(true);
    }
    
    private void generarCatalogoUnidadesTransporte(){
        try {
            String reportPath = "/reports/ReporteTransportesRemex.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1243\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporte()", 1243, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1244\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporte()", 1244, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1245\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporte()", 1245, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarCatalogoUnidadesTransporteCBajas(){
        try {
            String reportPath = "/reports/ReporteTransportesRemexCBajas.jasper";
            String logoPath = "/icons/Logo Efectivo Negro.png";
            Locale locale = new Locale("en", "US");
            InputStream jasperStream = getClass().getResourceAsStream(reportPath);
            JasperReport jReport = (JasperReport)JRLoader.loadObject(jasperStream);
            JasperPrint jPrint = null;
            HashMap parameters = new HashMap();
            LazyQueryDAO lazyQ = new LazyQueryDAO();
            parameters.put(JRParameter.REPORT_LOCALE, locale);
            parameters.put("LOGO", this.getClass().getResourceAsStream(logoPath));
            lazyQ.startLazyQuery();
            jPrint = JasperFillManager.fillReport(jReport, parameters, DBConnection.getConn());
            JasperViewer.viewReport(jPrint, false);
            lazyQ.endLazyQuery();
        } catch(SQLException ex) { 
            JOptionPane.showMessageDialog(null, "Código error: 1246\n" + ex.getMessage(),
                            "Error al acceder a los datos en la BD de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporteCBajas()", 1246, UserHome.getUsuario(), ex);
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1247\n" + ex.getMessage(),
                            "Error al generar el reporte de la reparación!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporteCBajas()", 1247, UserHome.getUsuario(), ex);
            //Logger.getLogger(ControlOrdenesReparacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1248\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarCatalogoUnidadesTransporteCBajas()", 1248, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteEntradas(){
        try {
            EntriesReport report = new EntriesReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2120\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 2120, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteSalidaTransporte(){
        try {
            TransportExitReport report = new TransportExitReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2123\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 2123, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteSalidaEspecial(){
        try {
            SpecialExitReport report = new SpecialExitReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2124\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 2124, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteSalidasOperador(){
        try {
            DriverExitReport report = new DriverExitReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2127\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 2127, UserHome.getUsuario(), ex);
        }
    }
    
    private void generarReporteSalidasTaller(){
        try {
            TallerExitReport report = new TallerExitReport(this);
            report.generarReporte();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 2128\n" + ex.getMessage(),
                            "Error error al ver el reporte!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome generarReporteInventario()", 2128, UserHome.getUsuario(), ex);
        }
    }
    
    private void cerrarSesion(){
        try{
            UserHome.setUsuario(null);
            Logging log = new Logging();
            log.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1156\n" + ex.getMessage(),
                    "Error al cerrar sesión!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("UserHome cerrarSesion()", 1156, UserHome.getUsuario(), ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserHome().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBFacturasProveedor;
    private javax.swing.JButton jBInventario;
    private javax.swing.JButton jBRefacciones;
    private javax.swing.JButton jBReparaciones;
    private javax.swing.JButton jBSAlmacen;
    private javax.swing.JButton jBUnidades;
    private javax.swing.JLabel jLLogo;
    private javax.swing.JMenu jMAyuda;
    private javax.swing.JMenuBar jMBMenu;
    private javax.swing.JMenu jMIAcciones;
    private javax.swing.JMenuItem jMIActualizarPartesBajasStock;
    private javax.swing.JMenuItem jMICatalogoOperadores;
    private javax.swing.JMenuItem jMICatalogoOperadoresCBajas;
    private javax.swing.JMenuItem jMICatalogoProveedores;
    private javax.swing.JMenuItem jMICatalogoRefacciones;
    private javax.swing.JMenuItem jMICatalogoTransportes;
    private javax.swing.JMenuItem jMICatalogoTransportesCBajas;
    private javax.swing.JMenuItem jMICerrarSesion;
    private javax.swing.JMenuItem jMIFamiliasRefacciones;
    private javax.swing.JMenuItem jMIGruposRefacciones;
    private javax.swing.JMenuItem jMIInvetarios;
    private javax.swing.JMenuItem jMIMarcasMotores;
    private javax.swing.JMenuItem jMIOperadores;
    private javax.swing.JMenuItem jMIProveedores;
    private javax.swing.JMenuItem jMIRefacciones;
    private javax.swing.JMenuItem jMIRegistroFacturas;
    private javax.swing.JMenuItem jMIReparaciones;
    private javax.swing.JMenuItem jMIReporteCargosDirectos;
    private javax.swing.JMenuItem jMIReporteCostoReparaciones;
    private javax.swing.JMenuItem jMIReporteEntradas;
    private javax.swing.JMenuItem jMIReporteInventario;
    private javax.swing.JMenuItem jMIReporteInventarioBajoStock;
    private javax.swing.JMenuItem jMIReporteOrdenReparacion;
    private javax.swing.JMenuItem jMIReporteReparacionesPUnidad;
    private javax.swing.JMenuItem jMIReporteSalidasEspeciales;
    private javax.swing.JMenuItem jMIReporteSalidasOperador;
    private javax.swing.JMenuItem jMIReporteSalidasTaller;
    private javax.swing.JMenuItem jMIReporteSalidasUnidad;
    private javax.swing.JMenuItem jMIReporteTrabajosExternos;
    private javax.swing.JMenuItem jMISalidasAlmacen;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenuItem jMIUnidadesTransporte;
    private javax.swing.JMenuItem jMIUsuarios;
    private javax.swing.JMenuItem jMIVerManual;
    private javax.swing.JMenu jMManejoRefacciones;
    private javax.swing.JMenu jMModulos;
    private javax.swing.JMenu jMRefacciones;
    private javax.swing.JMenu jMReportes;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPModulosPrincipales;
    private javax.swing.JPanel jPNotificacionesPendientes;
    private javax.swing.JPanel jPPartesBajasInventario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTNotificaciones;
    private javax.swing.JTable jTPartesBajas;
    // End of variables declaration//GEN-END:variables
}
