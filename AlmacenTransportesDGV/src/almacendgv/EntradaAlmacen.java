/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package almacendgv;

import beans.EntradaAlmacenDTO;
import beans.FacturaDTO;
import data.EntradaAlmacenDAO;
import data.RefaccionDAO;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import logger.ErrorLogger;

/**
 *
 * @author David Israel
 */
public class EntradaAlmacen extends javax.swing.JFrame {

    private FacturaDTO factura;
    private ControlFacturasProveedor controlFacturas;
    private String valorOriginal;
    
    
    /**
     * Creates new form EntradaAlmacen
     */
    public EntradaAlmacen() {
        try{
            initComponents();
            this.setLocationRelativeTo(null);
            this.jTFSubtotal.setText("0.000");
            this.jTFPorcentajeIVA.setText("16.000");
            this.jTFIVA.setText("0.000");
            this.jTFPrecioUnitario.setText("0.000");
            this.jTFCantidad.setText("0.000");
            this.jTFSubtotal.setText("0.000");
            this.jTFTotal.setText("0.000");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1050\n" + ex.getMessage(),
                    "Error al iniciar ventana de Entradas de Almacén!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("Constructor EntradaAlmacen()", 1050, UserHome.getUsuario(), ex);
            this.dispose();
        }
    }

    public FacturaDTO getFactura(){
        return this.factura;
    }
    
    public void setFactura(FacturaDTO factura){
        this.factura = factura;
    }
    
    public ControlFacturasProveedor getControlFacturas(){
        return this.controlFacturas;
    }
    
    public void setControlFacturas(ControlFacturasProveedor controlFacturas){
        this.controlFacturas = controlFacturas;
    }
    
    public void mostrarDatos(){
        try{
            this.jTFFolio.setText(factura.getFolio());
            this.jTFProveedor.setText(factura.getProveedor().getNombre());
            this.jTFPorcentajeIVA.setText("16.000");
            this.jTFIVA.setText("0.000");
            this.jTFPrecioUnitario.setText("0.000");
            this.jTFSubtotal.setText("0.000");
            this.jTFCantidad.setText("0.000");
            this.jTFClaveRefaccion.setText(null);
            this.jTFSubtotal.setText("0.000");
            this.jTFUsuario.setText(UserHome.getUsuario().getNombre() + " " + UserHome.getUsuario().getApellidos());
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1051\n" + ex.getMessage(),
                    "Error al mostrar los datos!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen mostrarDatos()", 1051, UserHome.getUsuario(), ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLProveedor = new javax.swing.JLabel();
        jTFProveedor = new javax.swing.JTextField();
        jLFolio = new javax.swing.JLabel();
        jTFFolio = new javax.swing.JTextField();
        jLFecha = new javax.swing.JLabel();
        jLClaveRefaccion = new javax.swing.JLabel();
        jTFClaveRefaccion = new javax.swing.JTextField();
        jLCantidad = new javax.swing.JLabel();
        jTFCantidad = new javax.swing.JTextField();
        jLPrecioUnitario = new javax.swing.JLabel();
        jTFPrecioUnitario = new javax.swing.JTextField();
        jLSubtotal = new javax.swing.JLabel();
        jTFSubtotal = new javax.swing.JTextField();
        jLPorcentajeIVA = new javax.swing.JLabel();
        jTFPorcentajeIVA = new javax.swing.JTextField();
        jLIVA = new javax.swing.JLabel();
        jTFIVA = new javax.swing.JTextField();
        jBAgregarEntrada = new javax.swing.JButton();
        jLLogo = new javax.swing.JLabel();
        jLTotal = new javax.swing.JLabel();
        jTFTotal = new javax.swing.JTextField();
        jLUsuario = new javax.swing.JLabel();
        jTFUsuario = new javax.swing.JTextField();
        jCCFecha = new de.wannawork.jcalendar.JCalendarComboBox();
        jMBMenu = new javax.swing.JMenuBar();
        jMArchivo = new javax.swing.JMenu();
        jMIAgregar = new javax.swing.JMenuItem();
        jMISalir = new javax.swing.JMenuItem();
        jMEditar = new javax.swing.JMenu();
        jMILimpiar = new javax.swing.JMenuItem();
        jMIBuscarParte = new javax.swing.JMenuItem();
        jMAyuda = new javax.swing.JMenu();
        jMIVerManual = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entrada Almacén - Sistema de Administración Mantenimiento");
        setResizable(false);

        jLProveedor.setText("Proveedor:");

        jTFProveedor.setEditable(false);
        jTFProveedor.setFocusable(false);

        jLFolio.setText("Folio:");

        jTFFolio.setEditable(false);
        jTFFolio.setFocusable(false);

        jLFecha.setText("Fecha:");

        jLClaveRefaccion.setText("Clave de Refacción:");

        jLCantidad.setText("Cantidad:");

        jTFCantidad.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTFCantidadCaretUpdate(evt);
            }
        });
        jTFCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFCantidadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFCantidadFocusLost(evt);
            }
        });

        jLPrecioUnitario.setText("Precio Unitario:");

        jTFPrecioUnitario.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTFPrecioUnitarioCaretUpdate(evt);
            }
        });
        jTFPrecioUnitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFPrecioUnitarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPrecioUnitarioFocusLost(evt);
            }
        });

        jLSubtotal.setText("Subtotal:");

        jTFSubtotal.setEditable(false);
        jTFSubtotal.setFocusable(false);
        jTFSubtotal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTFSubtotalCaretUpdate(evt);
            }
        });
        jTFSubtotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFSubtotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFSubtotalFocusLost(evt);
            }
        });

        jLPorcentajeIVA.setText("% IVA:");

        jTFPorcentajeIVA.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTFPorcentajeIVACaretUpdate(evt);
            }
        });
        jTFPorcentajeIVA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFPorcentajeIVAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPorcentajeIVAFocusLost(evt);
            }
        });

        jLIVA.setText("IVA:");

        jTFIVA.setEditable(false);
        jTFIVA.setFocusable(false);
        jTFIVA.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTFIVACaretUpdate(evt);
            }
        });
        jTFIVA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFIVAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFIVAFocusLost(evt);
            }
        });

        jBAgregarEntrada.setText("Agregar Entrada de Almacén");
        jBAgregarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarEntradaActionPerformed(evt);
            }
        });

        jLLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Logo Efectivo Negro chico.png"))); // NOI18N

        jLTotal.setText("Total:");

        jTFTotal.setEditable(false);
        jTFTotal.setFocusable(false);

        jLUsuario.setText("Usuario:");

        jTFUsuario.setEditable(false);
        jTFUsuario.setFocusable(false);

        jMArchivo.setText("Archivo");

        jMIAgregar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMIAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Apply-16.png"))); // NOI18N
        jMIAgregar.setText("Agregar");
        jMIAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAgregarActionPerformed(evt);
            }
        });
        jMArchivo.add(jMIAgregar);

        jMISalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMISalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Exit-16.png"))); // NOI18N
        jMISalir.setText("Salir");
        jMISalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISalirActionPerformed(evt);
            }
        });
        jMArchivo.add(jMISalir);

        jMBMenu.add(jMArchivo);

        jMEditar.setText("Editar");

        jMILimpiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMILimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Clear-16.png"))); // NOI18N
        jMILimpiar.setText("Limpiar");
        jMILimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMILimpiarActionPerformed(evt);
            }
        });
        jMEditar.add(jMILimpiar);

        jMIBuscarParte.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMIBuscarParte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search-16.png"))); // NOI18N
        jMIBuscarParte.setText("Buscar Parte");
        jMIBuscarParte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIBuscarParteActionPerformed(evt);
            }
        });
        jMEditar.add(jMIBuscarParte);

        jMBMenu.add(jMEditar);

        jMAyuda.setText("Ayuda");

        jMIVerManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMIVerManual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Help-16.png"))); // NOI18N
        jMIVerManual.setText("Ver Manual");
        jMIVerManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIVerManualActionPerformed(evt);
            }
        });
        jMAyuda.add(jMIVerManual);

        jMBMenu.add(jMAyuda);

        setJMenuBar(jMBMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLTotal)
                    .addComponent(jLPorcentajeIVA)
                    .addComponent(jLPrecioUnitario)
                    .addComponent(jLClaveRefaccion)
                    .addComponent(jLFolio)
                    .addComponent(jLUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jTFPorcentajeIVA, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTFPrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(67, 67, 67)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTFClaveRefaccion, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(jTFFolio, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(jTFUsuario))
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLIVA)
                            .addComponent(jLSubtotal)
                            .addComponent(jLCantidad)
                            .addComponent(jLFecha)
                            .addComponent(jLProveedor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFIVA)
                            .addComponent(jTFSubtotal)
                            .addComponent(jTFCantidad)
                            .addComponent(jTFProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jCCFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBAgregarEntrada)))
                .addGap(18, 67, Short.MAX_VALUE)
                .addComponent(jLLogo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLProveedor)
                            .addComponent(jTFProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLUsuario)
                            .addComponent(jTFUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLFecha)
                                .addComponent(jLFolio)
                                .addComponent(jTFFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCCFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLCantidad)
                            .addComponent(jTFCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLClaveRefaccion)
                            .addComponent(jTFClaveRefaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLLogo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSubtotal)
                    .addComponent(jTFSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLPrecioUnitario)
                    .addComponent(jTFPrecioUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLIVA)
                    .addComponent(jTFIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLPorcentajeIVA)
                    .addComponent(jTFPorcentajeIVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAgregarEntrada)
                    .addComponent(jLTotal)
                    .addComponent(jTFTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMIAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAgregarActionPerformed
        this.agregar();
    }//GEN-LAST:event_jMIAgregarActionPerformed

    private void jMISalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMISalirActionPerformed

    private void jMILimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMILimpiarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_jMILimpiarActionPerformed

    private void jMIBuscarParteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIBuscarParteActionPerformed
        this.buscar();
    }//GEN-LAST:event_jMIBuscarParteActionPerformed

    private void jMIVerManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIVerManualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMIVerManualActionPerformed

    private void jBAgregarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarEntradaActionPerformed
        this.agregar();
    }//GEN-LAST:event_jBAgregarEntradaActionPerformed

    private void jTFCantidadCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTFCantidadCaretUpdate
        DecimalFormat format = new DecimalFormat("0.000");
        try{
            
            if(!"".equals(this.jTFCantidad.getText()) && !"".equals(this.jTFIVA.getText()) && 
                    !"".equals(this.jTFTotal.getText()) && !"".equals(this.jTFPorcentajeIVA.getText()) && 
                    !"".equals(this.jTFPrecioUnitario.getText()) && !"".equals(this.jTFSubtotal.getText())){
            
                double subtotal = Double.parseDouble(this.jTFCantidad.getText()) * 
                        Double.parseDouble(this.jTFPrecioUnitario.getText());
                this.jTFSubtotal.setText(format.format(subtotal));

                double iva = (double)((Double.parseDouble(this.jTFSubtotal.getText()) * 
                        Double.parseDouble(this.jTFPorcentajeIVA.getText())) / 100.0);
                this.jTFIVA.setText(format.format(iva));

                double total = Double.parseDouble(this.jTFSubtotal.getText()) +
                        Double.parseDouble(this.jTFIVA.getText());
                this.jTFTotal.setText(format.format(total));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1052\n" + ex.getMessage(),
                    "Error en el calculo de los valores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen jTFCantidadCaretUpdate()", 1052, UserHome.getUsuario(), ex);
        }
    }//GEN-LAST:event_jTFCantidadCaretUpdate

    private void jTFPrecioUnitarioCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTFPrecioUnitarioCaretUpdate
        DecimalFormat format = new DecimalFormat("0.000");
        try{
            if(!"".equals(this.jTFCantidad.getText()) && !"".equals(this.jTFIVA.getText()) && 
                    !"".equals(this.jTFTotal.getText()) && !"".equals(this.jTFPorcentajeIVA.getText()) && 
                    !"".equals(this.jTFPrecioUnitario.getText()) && !"".equals(this.jTFSubtotal.getText())){
            
                double subtotal = Double.parseDouble(this.jTFCantidad.getText()) * 
                        Double.parseDouble(this.jTFPrecioUnitario.getText());
                this.jTFSubtotal.setText(format.format(subtotal));

                double iva = (double)((Double.parseDouble(this.jTFSubtotal.getText()) * 
                        Double.parseDouble(this.jTFPorcentajeIVA.getText())) / 100.0);
                this.jTFIVA.setText(format.format(iva));

                double total = Double.parseDouble(this.jTFSubtotal.getText()) +
                        Double.parseDouble(this.jTFIVA.getText());
                this.jTFTotal.setText(format.format(total));
                
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1053\n" + ex.getMessage(),
                    "Error en el calculo de los valores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen jTFPrecioUnitarioCaretUpdate()", 1053, UserHome.getUsuario(), ex);
        }
    }//GEN-LAST:event_jTFPrecioUnitarioCaretUpdate

    private void jTFSubtotalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTFSubtotalCaretUpdate
        DecimalFormat format = new DecimalFormat("0.000");
        try{
            if(!"".equals(this.jTFCantidad.getText()) && !"".equals(this.jTFIVA.getText()) && 
                    !"".equals(this.jTFTotal.getText()) && !"".equals(this.jTFPorcentajeIVA.getText()) && 
                    !"".equals(this.jTFPrecioUnitario.getText()) && !"".equals(this.jTFSubtotal.getText())){
                
                double iva = (double)((Double.parseDouble(this.jTFSubtotal.getText()) * 
                        Double.parseDouble(this.jTFPorcentajeIVA.getText())) / 100.0);
                this.jTFIVA.setText(format.format(iva));

                double total = Double.parseDouble(this.jTFSubtotal.getText()) +
                        Double.parseDouble(this.jTFIVA.getText());
                this.jTFTotal.setText(format.format(total));
                
            }
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1054\n" + ex.getMessage(),
                    "Error en el calculo de los valores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen jTFSubtotalCaretUpdate()", 1054, UserHome.getUsuario(), ex);
        }
    }//GEN-LAST:event_jTFSubtotalCaretUpdate

    private void jTFPorcentajeIVACaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTFPorcentajeIVACaretUpdate
        DecimalFormat format = new DecimalFormat("0.000");
        try{
            if(!"".equals(this.jTFCantidad.getText()) && !"".equals(this.jTFIVA.getText()) && 
                    !"".equals(this.jTFTotal.getText()) && !"".equals(this.jTFPorcentajeIVA.getText()) && 
                    !"".equals(this.jTFPrecioUnitario.getText()) && !"".equals(this.jTFSubtotal.getText())){
                
            
                double iva = (double)((Double.parseDouble(this.jTFSubtotal.getText()) * 
                        Double.parseDouble(this.jTFPorcentajeIVA.getText())) / 100.0);
                this.jTFIVA.setText(format.format(iva));

                double total = Double.parseDouble(this.jTFSubtotal.getText()) +
                        Double.parseDouble(this.jTFIVA.getText());
                this.jTFTotal.setText(format.format(total));
            
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1055\n" + ex.getMessage(),
                    "Error en el calculo de los valores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen jTFPorcentajeIVACaretUpdate()", 1055, UserHome.getUsuario(), ex);
        }
    }//GEN-LAST:event_jTFPorcentajeIVACaretUpdate

    private void jTFIVACaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTFIVACaretUpdate
        DecimalFormat format = new DecimalFormat("0.000");
        try{
            
            if(!"".equals(this.jTFCantidad.getText()) && !"".equals(this.jTFIVA.getText()) && 
                    !"".equals(this.jTFTotal.getText()) && !"".equals(this.jTFPorcentajeIVA.getText()) && 
                    !"".equals(this.jTFPrecioUnitario.getText()) && !"".equals(this.jTFSubtotal.getText())){
            
                double total = Double.parseDouble(this.jTFSubtotal.getText()) +
                        Double.parseDouble(this.jTFIVA.getText());
                this.jTFTotal.setText(format.format(total));
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Código error: 1056\n" + ex.getMessage(),
                    "Error en el calculo de los valores!!!", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen jTFIVACaretUpdate()", 1056, UserHome.getUsuario(), ex);
        }
    }//GEN-LAST:event_jTFIVACaretUpdate

    private void jTFCantidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCantidadFocusLost
        double cant = 0.00;
        try{
            cant = Double.parseDouble(this.valorOriginal);
        } catch(Exception ex) {
            cant = 0.00;
        }
        this.onFormatErrorSetValue(this.jTFCantidad, cant);
    }//GEN-LAST:event_jTFCantidadFocusLost

    private void jTFPrecioUnitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPrecioUnitarioFocusLost
        double cant = 0.00;
        try{
            cant = Double.parseDouble(this.valorOriginal);
        } catch(Exception ex) {
            cant = 0.00;
        }
        this.onFormatErrorSetValue(this.jTFPrecioUnitario, cant);
    }//GEN-LAST:event_jTFPrecioUnitarioFocusLost

    private void jTFSubtotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFSubtotalFocusLost
        double cant = 0.00;
        try{
            cant = Double.parseDouble(this.valorOriginal);
        } catch(Exception ex) {
            cant = 0.00;
        }
        this.onFormatErrorSetValue(this.jTFSubtotal, cant);
    }//GEN-LAST:event_jTFSubtotalFocusLost

    private void jTFPorcentajeIVAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPorcentajeIVAFocusLost
        double cant = 16.00;
        try{
            cant = Double.parseDouble(this.valorOriginal);
        } catch(Exception ex) {
            cant = 16.00;
        }
        this.onFormatErrorSetValue(this.jTFPorcentajeIVA, cant);
    }//GEN-LAST:event_jTFPorcentajeIVAFocusLost

    private void jTFIVAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFIVAFocusLost
        double cant = 0.00;
        try{
            cant = Double.parseDouble(this.valorOriginal);
        } catch(Exception ex) {
            cant = 0.00;
        }
        this.onFormatErrorSetValue(this.jTFIVA, cant);
    }//GEN-LAST:event_jTFIVAFocusLost

    private void jTFCantidadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFCantidadFocusGained
        this.prepararCaptura(this.jTFCantidad);
    }//GEN-LAST:event_jTFCantidadFocusGained

    private void jTFPrecioUnitarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPrecioUnitarioFocusGained
        this.prepararCaptura(this.jTFPrecioUnitario);
    }//GEN-LAST:event_jTFPrecioUnitarioFocusGained

    private void jTFSubtotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFSubtotalFocusGained
        this.prepararCaptura(this.jTFSubtotal);
    }//GEN-LAST:event_jTFSubtotalFocusGained

    private void jTFPorcentajeIVAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPorcentajeIVAFocusGained
        this.prepararCaptura(this.jTFPorcentajeIVA);
    }//GEN-LAST:event_jTFPorcentajeIVAFocusGained

    private void jTFIVAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFIVAFocusGained
        this.prepararCaptura(this.jTFIVA);
    }//GEN-LAST:event_jTFIVAFocusGained

    private void agregar(){
        EntradaAlmacenDTO entrada = new EntradaAlmacenDTO();
        try {
            EntradaAlmacenDAO acceso = new EntradaAlmacenDAO();
            RefaccionDAO accesoRefaccion = new RefaccionDAO();
            
            entrada.setCantidad(Double.parseDouble(this.jTFCantidad.getText()));
            entrada.setFactura(factura);
            entrada.setIva(Double.parseDouble(this.jTFIVA.getText()));
            entrada.setMonto(Double.parseDouble(this.jTFTotal.getText()));
            entrada.setPrecioUnitario(Double.parseDouble(this.jTFPrecioUnitario.getText()));
            entrada.setRefaccion(accesoRefaccion.obtenerRefaccion(this.jTFClaveRefaccion.getText(), true, true));
            entrada.setStatus(true);
            entrada.setSubtotal(Double.parseDouble(this.jTFSubtotal.getText()));
            entrada.setUsuario(UserHome.getUsuario());
            entrada.setFechaRegistro(new Timestamp(jCCFecha.getDate().getTime()));
            
            acceso.agregarEntradaAlmacen(entrada);
            this.limpiar();
            controlFacturas.actualizarTablas();
        } catch (SQLException ex) {
            try {
                JOptionPane.showMessageDialog(null, "Código error: 1057\n" + ex.getMessage(),
                        "Error al guardar los datos!!!", JOptionPane.ERROR_MESSAGE);
                ErrorLogger.scribirLog(entrada.toString(), 1057, UserHome.getUsuario(), ex);
                boolean reparacionExitosa = false;
                EntradaAlmacenDAO accesoEntradaAlmacen = new EntradaAlmacenDAO();
                reparacionExitosa = accesoEntradaAlmacen.repararErrorAgregarEntradaAlmacen();
                if(!reparacionExitosa){
                    JOptionPane.showMessageDialog(null, "Código error: 1058\n" + "No se pudo reparar la tabla",
                    "Error en acceso a datos!!!\nError al reparar la tabla.", JOptionPane.ERROR_MESSAGE);
                    ErrorLogger.scribirLog(entrada.toString(), 1058, UserHome.getUsuario(), ex);
                } else {
                    JOptionPane.showMessageDialog(null, "Reparación exitosa!!!",
                    "La tabla se reparó correctamente.", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex1) {
                //Logger.getLogger(EntradaAlmacen.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } catch (Exception ex) {
            try {
                JOptionPane.showMessageDialog(null, "Código error: 1059\n" + ex.getMessage(),
                        "Error al obtener los datos ingresados!!!", JOptionPane.ERROR_MESSAGE);
                ErrorLogger.scribirLog(entrada.toString(), 1059, UserHome.getUsuario(), ex);
                boolean reparacionExitosa = false;
                EntradaAlmacenDAO accesoEntradaAlmacen = new EntradaAlmacenDAO();
                reparacionExitosa = accesoEntradaAlmacen.repararErrorAgregarEntradaAlmacen();
                if(!reparacionExitosa){
                    JOptionPane.showMessageDialog(null, "Código error: 1060\n" + "No se pudo reparar la tabla",
                    "Error en acceso a datos!!!\nError al reparar la tabla.", JOptionPane.ERROR_MESSAGE);
                    ErrorLogger.scribirLog(entrada.toString(), 1060, UserHome.getUsuario(), ex);
                } else {
                    JOptionPane.showMessageDialog(null, "Reparación exitosa!!!",
                    "La tabla se reparó correctamente.", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex1) {
                //Logger.getLogger(EntradaAlmacen.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }
    
    private void limpiar(){
        this.mostrarDatos();
    }
    
    private void onFormatErrorSetValue(javax.swing.JTextField campo, double value){
        DecimalFormat formatD  = new DecimalFormat("0.000");
        try{
            double n = Double.parseDouble(campo.getText());
            campo.setText(formatD.format(n));
        } catch (Exception ex) {
            campo.setText(formatD.format(value));
        }
    }
    
    private void onFormatErrorSetValue(javax.swing.JTextField campo, int value){
        try{
            int n = (int)(Double.parseDouble(campo.getText()));
            campo.setText(Integer.toString(n));
        } catch (Exception ex) {
            campo.setText(Integer.toString(value));
        }
    }
    
    private void prepararCaptura(javax.swing.JTextField campo){
        try{
            this.valorOriginal = ((campo != null && !"".equals(campo.getText())) ? campo.getText() : "");
            campo.setText(null);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Código error: 1061\n" + ex.getMessage(),
                    "No se pudieron obtener los datos.", JOptionPane.ERROR_MESSAGE);
            ErrorLogger.scribirLog("EntradaAlmacen prepararCaptura()", 1061, UserHome.getUsuario(), ex);
        }
    }
    
    private void buscar(){
        BuscarCampoSimple buscarCampo = new BuscarCampoSimple();
        buscarCampo.setTipoRespuesta(1);
        buscarCampo.setRecibirTexto(this.jTFClaveRefaccion);
        buscarCampo.setLocationRelativeTo(null);
        buscarCampo.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntradaAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntradaAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntradaAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntradaAlmacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntradaAlmacen().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregarEntrada;
    private de.wannawork.jcalendar.JCalendarComboBox jCCFecha;
    private javax.swing.JLabel jLCantidad;
    private javax.swing.JLabel jLClaveRefaccion;
    private javax.swing.JLabel jLFecha;
    private javax.swing.JLabel jLFolio;
    private javax.swing.JLabel jLIVA;
    private javax.swing.JLabel jLLogo;
    private javax.swing.JLabel jLPorcentajeIVA;
    private javax.swing.JLabel jLPrecioUnitario;
    private javax.swing.JLabel jLProveedor;
    private javax.swing.JLabel jLSubtotal;
    private javax.swing.JLabel jLTotal;
    private javax.swing.JLabel jLUsuario;
    private javax.swing.JMenu jMArchivo;
    private javax.swing.JMenu jMAyuda;
    private javax.swing.JMenuBar jMBMenu;
    private javax.swing.JMenu jMEditar;
    private javax.swing.JMenuItem jMIAgregar;
    private javax.swing.JMenuItem jMIBuscarParte;
    private javax.swing.JMenuItem jMILimpiar;
    private javax.swing.JMenuItem jMISalir;
    private javax.swing.JMenuItem jMIVerManual;
    private javax.swing.JTextField jTFCantidad;
    private javax.swing.JTextField jTFClaveRefaccion;
    private javax.swing.JTextField jTFFolio;
    private javax.swing.JTextField jTFIVA;
    private javax.swing.JTextField jTFPorcentajeIVA;
    private javax.swing.JTextField jTFPrecioUnitario;
    private javax.swing.JTextField jTFProveedor;
    private javax.swing.JTextField jTFSubtotal;
    private javax.swing.JTextField jTFTotal;
    private javax.swing.JTextField jTFUsuario;
    // End of variables declaration//GEN-END:variables
}
